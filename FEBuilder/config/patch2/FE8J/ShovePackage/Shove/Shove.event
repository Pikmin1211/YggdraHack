#ifndef HAX_SHOVE_EVENT
#define HAX_SHOVE_EVENT

#ifndef _FE8_
	ERROR SHOVE is for FE8
#endif // _FE8_

#include "Extensions/Hack Installation.txt"
#include "eastdlib.event"

#include "_6CDefinitions.event"

#define ACTION_SHOVE 0x16

// YOU SHOULDN'T NEED TO EDIT ANYTHING PAST THIS (unless you're a wizard that came to do wizardry)
// -----------------------------------------------------------------------------------------------

#include "../InstallCommon.event"
//#include "../UnitActionRework/UnitActionRework.event"

ALIGN 4
_prGetShoveTargetOffset:
	#incbin "asm/GetShoveTargetOffset.dmp"
	POIN (prUnit_CanStandOnPosition+1)

ALIGN 4
_prMakeShoveTargetList:
	#incbin "asm/MakeShoveTargetList.dmp"
	POIN (_prGetShoveTargetOffset+1)

ALIGN 4
prShoveUsability:
	#incbin "asm/ShoveUsability.dmp"
	POIN (_prMakeShoveTargetList+1)

ALIGN 4
prShoveEffect:
	#incbin "asm/ShoveEffect.dmp"
	POIN (_prMakeShoveTargetList+1)
	POIN _pShoveSelectorDefinition

ALIGN 4
_prShoveSelection_OnSelection:
	#incbin "asm/ShoveSelection_OnSelection.dmp"
	POIN (_prGetShoveTargetOffset+1)
	WORD ACTION_SHOVE

ALIGN 4
_prShoveAction:
	#incbin "asm/ShoveAction_DirectJumpVersion.dmp"
	POIN (_pr6CShoveMoveWait_New+1)

ALIGN 4
_pr6CShoveMoveWait_New:
	#incbin "asm/ShoveAnim6C/Constructor.dmp"
	POIN _p6CShoveWaitForMove

ALIGN 4
_pr6CShoveMoveWait_Destruct:
	#incbin "asm/ShoveAnim6C/Destructor.dmp"

ALIGN 4
_pr6CShoveMoveWait_PushAnim:
	#incbin "asm/ShoveAnim6C/Call_PushAnim.dmp"
	POIN (_pr6CShoveMoveWait_MoveTowardsGoal+1)

ALIGN 4
_pr6CShoveMoveWait_MainAnim:
	#incbin "asm/ShoveAnim6C/Call_MainAnim.dmp"
	POIN (_pr6CShoveMoveWait_MoveTowardsGoal+1)
	POIN (_pr6CShoveMoveWait_MoveTowardsStart+1)

ALIGN 4
_pr6CShoveMoveWait_MoveTowardsGoal:
	#incbin "asm/ShoveAnim6C/Method_MoveTowardsGoal.dmp"
	POIN (prMOVEUNIT_MoveTowards+1)

ALIGN 4
_pr6CShoveMoveWait_MoveTowardsStart:
	#incbin "asm/ShoveAnim6C/Method_MoveTowardsStart.dmp"
	POIN (prMOVEUNIT_MoveTowards+1)

ALIGN 4
_pShoveSelectorDefinition:
	WORD 0 // Constructor
	WORD 0 // Destructor
	WORD 0 // idk (actually ik see my notes)
	WORD 0 // target change
	WORD 0 // same
	POIN (_prShoveSelection_OnSelection+1) // A Press
	POIN 0x022711 // B Press (Generic Vanilla One that calls the unit menu back)
	WORD 0 // same

ALIGN 4
_p6CShoveWaitForMove:
{
	_6C_SET_NAME(__psName)
	_6C_SET_DESTRUCTOR(_pr6CShoveMoveWait_Destruct+1)
	_6C_CALL_ROUTINE(0x15385) // Block 6C Thread 2
	
	// Start Animation on Next frame only (ensuring the 6C is properly constructed)
	_6C_YIELD
	
	// The next four calls are for the push animation
	_6C_CALL_ROUTINE_2(_pr6CShoveMoveWait_PushAnim+1)
	_6C_CALL_ROUTINE_2(_pr6CShoveMoveWait_PushAnim+1)
	_6C_CALL_ROUTINE_2(_pr6CShoveMoveWait_PushAnim+1)
	_6C_CALL_ROUTINE_2(_pr6CShoveMoveWait_PushAnim+1)
	
	// Finish animation
	_6C_LOOP_ROUTINE(_pr6CShoveMoveWait_MainAnim+1)
	
	_6C_CALL_ROUTINE(0x15395) // Unblock 6C Thread 2
	_6C_END
	
__psName:
	String(WaitForMove)
	BYTE 0
}

#define pActionRoutineTable 0x031FAC
#define ActionRoutine(apRoutine) "POIN apRoutine"
#define SetUnitAction(aActionId, adActionRoutine) "PUSH; ORG (pActionRoutineTable + 4*(aActionId-1)); adActionRoutine; POP"
SetUnitAction(ACTION_SHOVE, ActionRoutine(_prShoveAction))



#define setText_WithHuffman(textID, offset) "PUSH; ORG (TextTable+4*textID); POIN (offset); POP" //With Huffman

#define NormalText 0x0
#define GrayText 0x1
#define BlueText 0x2
#define OrangeText 0x3
#define GreenText 0x4
#define BlackText 0x5

PUSH
ORG	FEBUILDER_EXTRA_ORG
	POIN TxtData0xe13_sjis
	SHORT 0xe13
	SHORT 0xe14
	BYTE  OrangeText
	BYTE  $4e
	SHORT 0
	POIN prShoveUsability|1
	WORD 0
	POIN prShoveEffect|1
	WORD 0
	WORD 0
	WORD 0
POP

TxtData0xe13:
#incbin "0xe13.bin"

TxtData0xe13_sjis:
#incbin "0xe13_sjis.bin"

TxtData0xe14:
#incbin "0xe14.bin"

setText_WithHuffman(0xe13,TxtData0xe13)
setText_WithHuffman(0xe14,TxtData0xe14)

ALIGN 4 // for good measure

#endif // HAX_SHOVE_EVENT
